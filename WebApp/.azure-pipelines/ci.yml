variables:
  - template: templates/variables.yml

trigger: none

stages:
  - stage:
    displayName: 'Migration ci pipeline'
    jobs:
      - job: Build
        displayName: 'Build'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            clean: true
            submodules: true
            lfs: true
            
          - task: UseDotNet@2
            displayName: 'Use .NET SDK'
            inputs:
              useGlobalJson: true
          
          - bash: |
              dotnet restore $(SolutionPath)
            displayName: 'Dotnet Restore'
            
          - bash: |
              dotnet build $(SolutionPath) --configuration Release --no-restore
            displayName: 'Dotnet Build'

          - bash: |
              dotnet test $(SolutionPath) --configuration Release --no-build --no-restore --logger "trx;logfilename=testResults.trx" --results-directory $(Common.TestResultsDirectory)
            displayName: 'Dotnet Test'

          - bash: |
              dotnet publish $(SolutionPath) --configuration Release --no-build --no-restore --output $(Common.ArtifactStagingDirectory)
            displayName: 'Dotnet Publish'

          - bash: |
              ls $(Common.TestResultsDirectory)
            displayName: 'Set BuildId'

          - task: PublishTestResults@2
            displayName: 'Publish Test Results'
            inputs:
              testResultsFiles: '**/TestResults/*.trx'
              testResultsFormat: 'VSTest'
              failTaskOnFailedTests: true
              searchFolder: $(Common.TestResultsDirectory)
            condition: succeededOrFailed()